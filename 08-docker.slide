# Docker
Course Go
Tags: golang, go

## Outline

- Containers
- Docker
    - Desktop
    - Engine
    - Hub
    - Build
    - Compose
- Podman
- Testcontainers
- Kubernetes

## Containers

## Containers

- A form of virtualization
- Lightweight version of virtual machines (VMs)
    - Does not use a hypervisor
    - Reuses host OS
    - Requires:
        - Compatible kernel
        - Container runtime
- Shipped in a form of images
    - The image generally includes all of its dependencies

[Google Cloud: Containers](https://cloud.google.com/learn/what-are-containers)

##

.image assets/lecture-08/containers/containers-and-vms.svg 450 _

## Containers vs VMs

- VMs are generally used for infrastructure provisioning
    - Provide better resource isolation
        - Virtualizes at the hardware level
- Containers serve as a tool for developers for shipping software
    - More lightweight
        - Virtualizes at the OS level
        - Share the OS kernel
            - Fraction of the memory is used

[Google Cloud: Containers vs VMs](https://cloud.google.com/discover/containers-vs-vms)

## Motivation

- Local development
    - Running dependecies
    - Minimal overhead
- Production environment
    - Shipping deyployable units of software
    - Simplifies collaboration with DevOps/Ops engineers

## Open Container Initiative (OCI)

- Specifies industry standards around container technology
- Formed under the Linux Foundation
- Launched by Docker and other leaders in the container industry [2015]
- Three specifications:
    - [Runtime Specification](https://github.com/opencontainers/runtime-spec?tab=readme-ov-file)
    - [Image Specification](https://github.com/opencontainers/image-spec)
    - [Distrubution Specification](https://github.com/opencontainers/distribution-spec)

[GitHub: Open Container Initiative](https://github.com/opencontainers)

## Docker

## Docker

_Commercial use of Docker Desktop in larger enterprises (more than 250 employees OR more than $10 million USD in annual revenue) requires a paid subscription._

[Docker documentation](https://docs.docker.com)

## Docker Desktop

## Docker Desktop

- "One-click-install"
- Includes all necessary tools:
    - Docker Engine
    - Docker CLI
    - Docker Build
    - Docker Compose
    - And a few more tool...

[Docker: Docker Desktop](https://docs.docker.com/desktop/)

## Docker Hub

## Docker Hub

[Docker: Docker Hub](https://docs.docker.com/docker-hub/)

## Docker Build

## Docker Build

[Docker: Docker Build](https://docs.docker.com/build/)

## Multi-stage builds

[Docker: Multi-stage builds](https://docs.docker.com/build/building/multi-stage/)

## Multi-platform builds

[Docker: Multi-platform builds](https://docs.docker.com/build/building/multi-platform/)

## Docker Compose

## YAML

- _Yet Another Markup Language_
    - _YAML Ain't Markup Language_

## Docker Compose

[Docker: Docker Compose](https://docs.docker.com/compose/)

## Podman

## Podman

- An alternative to Docker
- Open-source

[GitHub: Container](https://github.com/containers/)

## Testcontainers

## Testing with dependencies

- Not all tests require real dependencies
    - Fakes can be used
- However, integration with real services has to be tested at some point
- Isolation of tests
    - Multiple tests share a single database instance
        - Create a new database per each test
        - The single instance has to actually exist
            - Docker Compose
    - Or spawn per test instance
        - Testcontainers

## Testcontainers

- Allows running containers directly in code
- Simplifies testing against real services
- SDK for many languages:
    - Go, Rust, Java, .NET, Python, Node.js, Haskell...
- Keep in mind that spawning containers is not cheap
    - [postgres:16](https://hub.docker.com/_/postgres) image has around 450 MB

[Testcontainers](https://testcontainers.com)

## Testcontainers

.code assets/lecture-08/testcontainers/quickstart.go /START OMIT/,/END OMIT/

[Testcontainers for Go: Quickstart](https://golang.testcontainers.org/quickstart/)

## Modules

- Preconfigured implementations of various dependencies
    - All major databases
    - Message brokers
    - Cloud SDKs

[Testcontainers: Modules](https://testcontainers.com/modules/)

## Modules

.code assets/lecture-08/testcontainers/module.go /START OMIT/,/END OMIT/

[Testcontainers for Go: Postgres module](https://golang.testcontainers.org/modules/postgres/)

## Kubernetes

## Kubernetes

- TODO

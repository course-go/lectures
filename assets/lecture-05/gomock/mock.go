// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go
//
// Generated by this command:
//
//	mockgen -source interfaces.go -destination mock.go -package calculator
//

// Package calculator is a generated GoMock package.
package calculator

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// START OMIT

// MockAdder is a mock of Adder interface.
type MockAdder struct {
	ctrl     *gomock.Controller
	recorder *MockAdderMockRecorder
}

// MockAdderMockRecorder is the mock recorder for MockAdder.
type MockAdderMockRecorder struct {
	mock *MockAdder
}

// NewMockAdder creates a new mock instance.
func NewMockAdder(ctrl *gomock.Controller) *MockAdder {
	mock := &MockAdder{ctrl: ctrl}
	mock.recorder = &MockAdderMockRecorder{mock}
	return mock
}

// MIDDLE OMIT

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdder) EXPECT() *MockAdderMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockAdder) Add(a, b int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", a, b)
	ret0, _ := ret[0].(int)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockAdderMockRecorder) Add(a, b any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockAdder)(nil).Add), a, b)
}

// END OMIT

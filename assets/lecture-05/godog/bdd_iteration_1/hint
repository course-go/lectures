Feature: simple accumulator checks
  An accumulator must be able to add a number to its content

  Scenario: Add two positive integers       # features/accumulator.feature:4
    Given I have an accumulator with 0
    When I add 2 to accumulator
    Then the accumulated result should be 5

1 scenarios (1 undefined)
3 steps (3 undefined)
49.638Âµs

You can implement step definitions for undefined steps with these snippets:

func iHaveAnAccumulatorWith(arg1 int) error {
        return godog.ErrPending
}

func iAddToAccumulator(arg1 int) error {
        return godog.ErrPending
}

func theAccumulatedResultShouldBe(arg1 int) error {
        return godog.ErrPending
}

func FeatureContext(s *godog.Suite) {
        s.Step(`^I have an accumulator with (\d+)$`, iHaveAnAccumulatorWith)
        s.Step(`^I add (\d+) to accumulator$`, iAddToAccumulator)
        s.Step(`^the accumulated result should be (\d+)$`, theAccumulatedResultShouldBe)
}


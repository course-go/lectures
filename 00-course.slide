# Course overview
Course Go
Tags: golang, go

## Course

- 11 [lectures](https://github.com/course-go/lectures)
    - Includes hands-on [exercises](https://github.com/course-go/exercises)
- 4 [homework](https://github.com/course-go/homework) tasks
    - 14-day deadlines
    - 7-day review periods
- Final project
    - Solo
    - Team
    - Open-source contribution

## Requirements

- Total of 100 points
    - ~12.5 points per homework
    - ~50 points for project
- 70 points to pass
- Bonus points for:
    - Activity at the seminars
    - Exceptional or creative solutions 

## Course Outline

## Introduction (Week 01)

- Introduction to Go
- IDEs and editors
- Installing Go
- Running Go

## Fundamentals #1 (Week 02)

- Packages & visibility
- Variables
- Keywords
- Data types
- Control flow
- Functions
- Pointers
- Structures

## Fundamentals #2 (Week 03)

- Interfaces
- Errors
- Arrays
- Slices
- Maps
- Range

## Concurrency & Parallelism (Week 04)

- Goroutines
- Runtime
- Channels
- Select
- Related packages

## Advanced #1 (Week 05)

- Generics
- Packages
- Testing

## Advanced #2 (Week 06)

- Benchmarks
- Optimizations
- CGo
- Unsafe & Reflect

## REST APIs (Week 07)

- JSON
- HTTP
- REST API
- HTTP package
- Routers & Web frameworks
- OpenAPI
- Templating

## Containers (Week 08)

- Containerization 
- YAML
- Docker
- Kubernetes

## Databases (Week 09)

- SQL
- RDBMSs
- Migrations
- databases/sql
- sqlx
- sqlc
- GORM

## Infrastructure (Week 10)

- CI/CD
- Infrastructure
- GCP

## Observability (Week 11)

- Health
- Logs
- Metrics
- Traces
- OpenTelemetry
